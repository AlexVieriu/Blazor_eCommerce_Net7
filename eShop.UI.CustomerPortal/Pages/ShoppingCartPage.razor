@page "/cart"

@inject IViewShoppingCartUseCase viewShoppingCartUseCase

<h4 class="m-3">Shopping Cart</h4>

@if (order != null && order.LineItems != null && order.LineItems.Count > 0)
{
    <div class="row">
        <div class="col-8">
            @foreach (var item in order.LineItems)
            {
                <LineItemComp LineItem="item" OnUpdateQtyItem="UpdateLineItemQty" OnDeleteLineItem="DeleteLineItem" />
                <br>
            }
        </div>
        <div class="col">
            <OrderSummaryComp Order="order" IsVisible="true" />
        </div>
    </div>
}
else
{
    <p>There are no products in the Shopping Cart</p>
}


@code {
    Order order;
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            order = await viewShoppingCartUseCase.ExecuteAsync();
            StateHasChanged();
        }
    }

    private void UpdateLineItemQty(Order order)
    {
        this.order = order;
    }

    private void DeleteLineItem(Order order)
    {
        this.order = order;
    }
}